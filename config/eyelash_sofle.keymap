#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
        };

        lt_thumb: lt_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_THUMB";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };

        mt_thumb: mt_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_THUMB";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        sapphire_global: sapphire_global {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(G) &kp ENTER>;
            label = "SAPPHIRE_GLOBAL";
        };

        sapphire_unglobal: sapphire_unglobal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(U) &kp ENTER>;
            label = "SAPPHIRE_UNGLOBAL";
        };
    };

    combos {
        compatible = "zmk,combos";

        slash {
            bindings = <&kp SLASH>;
            key-positions = <9 10>;
            timeout-ms = <60>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE       &kp N1  &kp N2        &kp N3        &kp N4             &kp N5                 &kp UP_ARROW     &kp N6                &kp N7             &kp N8     &kp N9             &kp N0      &kp EQUAL
&kp TAB         &kp Q   &kp W         &kp E         &kp R              &kp T                  &kp DOWN_ARROW   &kp Y                 &kp U              &kp I      &kp O              &kp P       &kp LBKT
&mt LCTRL ESC   &kp A   &kp S         &kp D         &kp F              &kp G                  &kp LEFT_ARROW   &kp H                 &kp J              &kp K      &kp L              &kp SEMI    &kp APOS
&kp LEFT_SHIFT  &kp Z   &kp X         &kp C         &kp V              &kp B                  &kp RIGHT_ARROW  &kp N                 &kp M              &kp COMMA  &kp DOT            &kp SLASH   &kp RSHFT
&kp C_MUTE      &none   &kp LEFT_GUI  &kp LEFT_ALT  &lt_thumb 2 SPACE  &mt LCTRL LC(SPACE)    &kp ENTER        &mt LEFT_SHIFT SLASH  &lt_thumb 1 ENTER  &kp MINUS  &kp RIGHT_BRACKET  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &kp N7  &kp N8  &kp N9   &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp SLASH  &kp N4  &kp N5  &kp N6   &kp BACKSPACE  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &kp N1  &kp N2  &kp N3   &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &kp N0  &trans  &kp DOT  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans  &trans  &trans   &trans
            >;
        };

        layer_2 {
            bindings = <
&trans      &kp F1           &kp F2          &kp F3           &kp F4             &kp F5                &mmv MOVE_UP     &kp F6           &kp F7           &kp F8             &kp F9             &kp F10        &trans
&trans      &trans           &trans          &msc SCRL_UP     &kp LC(BACKSPACE)  &sapphire_unglobal    &mmv MOVE_DOWN   &trans           &kp LC(PAGE_UP)  &kp LC(BACKSPACE)  &kp LC(PAGE_DOWN)  &kp BACKSPACE  &kp RIGHT_BRACKET
&trans      &trans           &swapper        &msc SCRL_DOWN   &trans             &sapphire_global      &mmv MOVE_LEFT   &kp LEFT         &kp DOWN         &kp UP             &kp RIGHT          &kp ENTER      &trans
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR    &rgb_ug RGB_SPI       &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans             &trans             &trans         &trans
&kp C_MUTE  &trans           &trans          &trans           &trans             &trans                &mkp LCLK        &trans           &trans           &trans             &trans             &trans
            >;

            display-name = "layer_2";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
